{"version":3,"sources":["webpack:///./index.js","webpack:///./js/timer.js"],"names":["document","querySelector","constructor","selector","targetDate","this","startTimer","setInterval","currentTime","Date","now","time","days","pad","Math","floor","hours","mins","secs","changeTime","textContent","value","String","padStart"],"mappings":"kHAAA,4B,mBCCQA,SAASC,cAAc,uBACtBD,SAASC,cAAc,wBACrBD,SAASC,cAAc,uBACvBD,SAASC,cAAc,uBA8BlC,IA3BA,MACIC,aAAY,SAACC,EAAD,WAAWC,IACnBC,KAAKF,SAAWH,SAASC,cAAcE,GACvCE,KAAKD,WAAaA,EAEtBE,aACIC,YAAY,KACR,MAAMC,EAAcC,KAAKC,MACnBC,EAAON,KAAKD,WAAaI,EAEzBI,EAAOP,KAAKQ,IAAIC,KAAKC,MAAMJ,EAAO,QAClCK,EAAQX,KAAKQ,IAAIC,KAAKC,MAAOJ,EAAO,MAAR,OAC5BM,EAAOZ,KAAKQ,IAAIC,KAAKC,MAAOJ,EAAO,KAAR,MAC3BO,EAAOb,KAAKQ,IAAIC,KAAKC,MAAOJ,EAAO,IAAe,MACxDN,KAAKc,WAAWP,EAAMI,EAAOC,EAAMC,IACpC,KAEPC,WAAWP,EAAMI,EAAOC,EAAMC,GAC9Bb,KAAKF,SAASF,cAAc,uBAAuBmB,YAAcR,EACjEP,KAAKF,SAASF,cAAc,wBAAwBmB,YAAcJ,EAClEX,KAAKF,SAASF,cAAc,uBAAuBmB,YAAcH,EACjEZ,KAAKF,SAASF,cAAc,uBAAuBmB,YAAcF,EAEjEL,IAAIQ,GACF,OAAOC,OAAOD,GAAOE,SAAS,EAAG,OAGpB,CACjBpB,SAAU,WACVC,WAAY,IAAIK,KAAK,kBACpBH,e","file":"main.746a6eec7a5aefc07147.js","sourcesContent":["import './styles.css';\nimport './js/timer.js';","const refs = {\n  days: document.querySelector('[data-value=\"days\"]'),\n  hours: document.querySelector('[data-value=\"hours\"]'),\n  minutes: document.querySelector('[data-value=\"mins\"]'),\n  seconds: document.querySelector('[data-value=\"secs\"]'),\n};\n\nclass CountdownTimer {\n    constructor({selector, targetDate}) {\n        this.selector = document.querySelector(selector);\n        this.targetDate = targetDate;\n    };\n    startTimer() {\n        setInterval(() => {\n            const currentTime = Date.now();\n            const time = this.targetDate - currentTime;\n            // console.log(time)\n            const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n            const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n            const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n            const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n            this.changeTime(days, hours, mins, secs);\n        }, 1000)\n    };\n    changeTime(days, hours, mins, secs) {\n    this.selector.querySelector('[data-value=\"days\"]').textContent = days;\n    this.selector.querySelector('[data-value=\"hours\"]').textContent = hours;\n    this.selector.querySelector('[data-value=\"mins\"]').textContent = mins;\n    this.selector.querySelector('[data-value=\"secs\"]').textContent = secs;\n    };\n    pad(value) {\n      return String(value).padStart(2, '0');\n    };\n};\nnew CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('May 17, 2021'),\n}).startTimer();\n"],"sourceRoot":""}